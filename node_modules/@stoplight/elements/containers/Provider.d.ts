import { Resolver } from '@stoplight/json-ref-resolver';
import { IResolverOpts } from '@stoplight/json-ref-resolver/types';
import { SchemaTreeRefDereferenceFn } from '@stoplight/json-schema-viewer';
import { IComponentMapping } from '@stoplight/markdown-viewer';
import * as React from 'react';
import { NodeIconMapping } from '../types';
import { IFetchProps } from '../utils/createFetchClient';
export interface IProvider {
    host?: string;
    token?: string;
    projectToken?: string;
    components?: IComponentMapping;
    icons?: NodeIconMapping;
    resolver?: Resolver;
    inlineRefResolver?: SchemaTreeRefDereferenceFn;
}
export declare const HostContext: React.Context<string>;
export declare const RequestContext: React.Context<IFetchProps>;
export declare const ComponentsContext: React.Context<IComponentMapping | undefined>;
export declare const ActiveSrnContext: React.Context<string>;
export declare const ProjectTokenContext: React.Context<string>;
export declare const ResolverContext: React.Context<Resolver | undefined>;
export declare const ResolverOptionsContext: React.Context<IResolverOpts | undefined>;
export declare const InlineRefResolverContext: React.Context<SchemaTreeRefDereferenceFn | undefined>;
export declare const IconsContext: React.Context<NodeIconMapping>;
export declare const Provider: React.FunctionComponent<IProvider>;
