"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const React = tslib_1.__importStar(require("react"));
const Skeleton_1 = require("../components/Page/Skeleton");
const TableOfContents_1 = require("../components/TableOfContents");
const Skeleton_2 = require("../components/TableOfContents/Skeleton");
const useComputeToc_1 = require("../hooks/useComputeToc");
const useProjectNodes_1 = require("../hooks/useProjectNodes");
const srns_1 = require("../utils/srns");
const Page_1 = require("./Page");
exports.Hub = ({ srn, tabs, className, padding = '12', NotFoundComponent, group, tableOfContentsProps, pageProps, }) => {
    const { isLoading, data, error } = useProjectNodes_1.useProjectNodes(srn, { group });
    const contents = useComputeToc_1.useComputeToc(data ? data.items : []);
    const { uri } = srns_1.deserializeSrn(srn);
    let pageSrn;
    if (uri && uri !== '/') {
        pageSrn = srn;
    }
    else {
        const node = findFirstNode(contents);
        if (node && node.href) {
            pageSrn = node.href;
        }
    }
    if (NotFoundComponent && !isLoading && !contents.length) {
        return React.createElement(NotFoundComponent, { srn: srn, error: error, items: data ? data.items : [] });
    }
    return (React.createElement("div", { className: classnames_1.default('Hub flex w-full', className) },
        isLoading ? (React.createElement(Skeleton_2.TableOfContentsSkeleton, { padding: padding })) : (React.createElement(TableOfContents_1.TableOfContents, Object.assign({ srn: pageSrn, contents: contents, padding: padding }, tableOfContentsProps))),
        pageSrn ? (React.createElement(Page_1.Page, Object.assign({ className: "flex-1 border-l dark:border-darken-4", srn: pageSrn, group: group, tabs: tabs, padding: padding, scrollInnerContainer: true }, pageProps))) : (React.createElement(Skeleton_1.PageSkeleton, { className: "flex-1 border-l dark:border-darken-4", padding: padding }))));
};
function findFirstNode(nodes) {
    return nodes.find(node => !!node.href) || nodes[0];
}
//# sourceMappingURL=Hub.js.map