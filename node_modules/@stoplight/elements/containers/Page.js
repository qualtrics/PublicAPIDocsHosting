"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@blueprintjs/core");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const React = tslib_1.__importStar(require("react"));
const Page_1 = require("../components/Page");
const Skeleton_1 = require("../components/Page/Skeleton");
const useNodeInfo_1 = require("../hooks/useNodeInfo");
exports.Page = ({ srn, tabs, group, version, actions, padding = '12', shadows, className, scrollInnerContainer, }) => {
    const { isValidating, error, data } = useNodeInfo_1.useNodeInfo(srn, { group, version });
    const containerClassName = classnames_1.default(className, 'flex flex-col h-full');
    if (isValidating) {
        return React.createElement(Skeleton_1.PageSkeleton, { className: className, padding: padding });
    }
    if (error) {
        console.error('Error getting page data for srn:', srn, error);
        if (!data) {
            return (React.createElement("div", { className: containerClassName },
                React.createElement(core_1.NonIdealState, { icon: "error", title: "Something went wrong!", description: error ? error.message : String(error) })));
        }
    }
    if (!data) {
        return (React.createElement("div", { className: containerClassName },
            React.createElement(core_1.NonIdealState, { icon: "help", title: "404 Not Found", description: "It looks like this page doesn't exist" })));
    }
    return (React.createElement(Page_1.Page, { node: data, tabs: tabs, actions: actions, padding: padding, shadows: shadows, className: containerClassName, scrollInnerContainer: scrollInnerContainer }));
};
//# sourceMappingURL=Page.js.map