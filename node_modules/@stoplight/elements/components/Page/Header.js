"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const types_1 = require("@stoplight/types");
const withErrorBoundary_1 = require("@stoplight/ui-kit/withErrorBoundary");
const lodash_1 = require("lodash");
const React = tslib_1.__importStar(require("react"));
const Method_1 = require("../HttpOperation/Method");
const Path_1 = require("../HttpOperation/Path");
const PageHeaderComponent = ({ node, className, actions }) => {
    if (!node.name)
        return null;
    const isHttpOperation = node.type === types_1.NodeType.HttpOperation;
    const method = isHttpOperation && lodash_1.get(node, 'data.method');
    const host = isHttpOperation && lodash_1.get(node, 'data.servers[0].url');
    const path = isHttpOperation && lodash_1.get(node, 'data.path');
    return (React.createElement("div", { className: className },
        React.createElement("div", { className: "flex items-center" },
            method && React.createElement(Method_1.Method, { className: "mr-5", method: method }),
            React.createElement("h2", { className: "font-medium text-2xl flex-1" }, node.name),
            actions && actions({ node })),
        path && React.createElement(Path_1.Path, { className: "flex-1 mt-5 mb-1", host: host, path: path })));
};
exports.PageHeader = withErrorBoundary_1.withErrorBoundary(PageHeaderComponent, ['node'], 'PageHeader');
//# sourceMappingURL=Header.js.map