"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ui_kit_1 = require("@stoplight/ui-kit");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const React = tslib_1.__importStar(require("react"));
const useLocationHash_1 = require("../../hooks/useLocationHash");
exports.PageHeadings = ({ headings, className, title = 'On This Page', minimal, padding, }) => {
    const locationHash = useLocationHash_1.useLocationHash();
    if (!headings || !headings.length)
        return null;
    const component = (React.createElement("div", { style: { maxHeight: '85vh', overflow: 'auto' } },
        title && (React.createElement("div", { className: "py-2 text-gray-5 dark:text-gray-6 font-medium text-sm flex items-center", style: { paddingLeft: 18 } },
            React.createElement(ui_kit_1.Icon, { icon: "properties", iconSize: 10, className: "mr-2" }),
            title)),
        headings.map((heading, i) => (React.createElement(PageHeading, { key: i, item: heading, isSelected: locationHash === `#${heading.id}` })))));
    if (minimal) {
        return (React.createElement("div", { className: classnames_1.default(`sticky top-0 mt-${padding} h-0 px-4`), style: {
                width: 0,
                right: 70,
            } },
            React.createElement(ui_kit_1.Popover, { target: React.createElement("div", { className: "pt-6 mx-auto text-gray-5 dark:text-gray-6 flex", style: { paddingLeft: 18 } },
                    React.createElement(ui_kit_1.Icon, { icon: "properties", iconSize: 14, className: "mr-2" })), content: React.createElement("div", { className: classnames_1.default('p-2', className) }, component), position: "bottom-right", boundary: "scrollParent", usePortal: false })));
    }
    return (React.createElement("div", { className: classnames_1.default(`sticky top-0 pt-${padding} h-full px-4 overflow-auto`, className) },
        React.createElement("div", { className: "border-l border-gray-2 dark:border-lighten-4" }, component)));
};
const PageHeading = ({ item, isSelected }) => {
    return (React.createElement("a", { href: `#${item.id}`, className: classnames_1.default('truncate block py-2 pr-8 font-medium font-medium hover:text-blue-6 hover:no-underline text-sm', isSelected ? 'text-blue-6 dark:text-blue-2' : 'text-gray-6 dark:text-gray-5'), style: { paddingLeft: `${3 + item.depth * 15}px` } }, item.title));
};
//# sourceMappingURL=Headings.js.map