"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const types_1 = require("@stoplight/types");
const withErrorBoundary_1 = require("@stoplight/ui-kit/withErrorBoundary");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const React = tslib_1.__importStar(require("react"));
const useRequestMaker_1 = require("../../hooks/useRequestMaker");
const useResolver_1 = require("../../hooks/useResolver");
const RequestMaker_1 = require("../RequestMaker");
const TryItComponent = ({ value, mockUrl, padding = '12', className }) => {
    const { result } = useResolver_1.useResolver(types_1.NodeType.HttpOperation, value);
    const store = useRequestMaker_1.useRequestMaker(result, true, mockUrl);
    return (React.createElement("div", { className: classnames_1.default('Page__content TryIt', `p-${padding}`, className) },
        React.createElement(RequestMaker_1.RequestMakerProvider, { value: store },
            React.createElement(RequestMaker_1.RequestEndpoint, { className: "rounded" }),
            React.createElement(RequestMaker_1.RequestEditor, { className: "mt-10 border-t rounded" }),
            React.createElement(RequestMaker_1.ResponseViewer, { className: "mt-10 border-t rounded" }))));
};
TryItComponent.displayName = 'TryIt.Component';
exports.TryIt = withErrorBoundary_1.withErrorBoundary(TryItComponent, ['value'], 'TryIt');
//# sourceMappingURL=index.js.map