"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const json_1 = require("@stoplight/json");
const CodeViewer_1 = require("@stoplight/ui-kit/CodeViewer");
const SimpleTabs_1 = require("@stoplight/ui-kit/SimpleTabs");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const lodash_1 = require("lodash");
const React = tslib_1.__importStar(require("react"));
const SchemaViewer_1 = require("../SchemaViewer/SchemaViewer");
const JSV_MAX_ROWS = 20;
exports.Schema = ({ className, value, examples }) => {
    const [selectedIndex, setSelectedIndex] = React.useState(0);
    const schema = typeof value === 'string' ? json_1.safeParse(value) : value;
    if (!schema && !lodash_1.size(examples)) {
        return null;
    }
    return (React.createElement(SimpleTabs_1.SimpleTabs, { className: classnames_1.default('HttpOperation__Schema', className), selectedIndex: selectedIndex, onSelect: setSelectedIndex },
        React.createElement(SimpleTabs_1.SimpleTabList, null,
            schema && React.createElement(SimpleTabs_1.SimpleTab, null, "Schema"),
            lodash_1.map(examples, (example, index) => (React.createElement(SimpleTabs_1.SimpleTab, { key: index }, example.summary || example.key)))),
        schema && (React.createElement(SimpleTabs_1.SimpleTabPanel, { className: "p-0" },
            React.createElement(SchemaViewer_1.SchemaViewer, { maxRows: JSV_MAX_ROWS, schema: schema, shouldResolveEagerly: true }))),
        lodash_1.map(examples, (example, index) => (React.createElement(SimpleTabs_1.SimpleTabPanel, { key: index, className: "p-0" },
            React.createElement(CodeViewer_1.CodeViewer, { showLineNumbers: true, className: "py-4 overflow-auto max-h-400px", language: "json", value: json_1.safeStringify(example.value
                    ? example.value
                    : example.externalValue, undefined, 4) }))))));
};
exports.Schema.displayName = 'HttpOperation.Schema';
//# sourceMappingURL=Schema.js.map