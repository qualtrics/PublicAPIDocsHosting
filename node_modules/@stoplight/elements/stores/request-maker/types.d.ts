import { DeprecatedTreeListNode, TreeListNode } from '@stoplight/tree-list';
import { IHttpParam, IHttpResponse } from '@stoplight/types';
export declare type Response = ErrorResponse | IHttpResponse;
export declare type ErrorResponse = {
    error: string;
};
export declare type ParamField = {
    name: string;
    description: string;
    example: string;
};
export interface IParam<T = string | undefined> extends Pick<IHttpParam, Exclude<keyof IHttpParam, 'style'>> {
    name: string;
    value: T;
    type?: string;
    isEnabled?: boolean;
}
export declare type HeaderParam = IParam;
export declare type QueryParam = IParam;
export declare type PathParam = IParam;
export declare type ParamType = 'query' | 'path' | 'header' | 'formData' | 'urlEncoded';
export declare type ContentType = 'none' | 'raw' | 'form-data' | 'x-www-form-urlencoded' | 'binary' | 'graphql';
export interface INode {
    value?: unknown;
}
export declare type DeprecatedJsonTreeListNode = DeprecatedTreeListNode<INode>;
export declare type JsonTreeListNode = TreeListNode<INode>;
export declare type XHRResponseType = '' | 'json' | 'text' | 'xml' | 'html' | 'md' | 'img';
export declare type Auth = {
    username: string;
    password: string;
};
export interface IHttpNameValue {
    [name: string]: string;
}
