import * as React from 'react';
import { ErrorBoundaryContext } from './ErrorBoundaryProvider';
import { ErrorBoundaryProps, ErrorBoundaryState } from './types';
export declare class ErrorBoundary<P extends object = {}> extends React.PureComponent<P & ErrorBoundaryProps<P>, ErrorBoundaryState> {
    static contextType: React.Context<import("@stoplight/reporter").IReportingAPI>;
    context: React.ContextType<typeof ErrorBoundaryContext>;
    state: {
        error: null;
        componentStack: null;
    };
    componentDidUpdate(prevProps: Readonly<P & ErrorBoundaryProps<P>>): void;
    componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void;
    protected handleError(error: Error, errorInfo: React.ErrorInfo | null): void;
    throwError: (error: Error) => void;
    protected setError(error: Error | null, componentStack?: string | null): void;
    protected recover: () => void;
    render(): {} | null | undefined;
}
