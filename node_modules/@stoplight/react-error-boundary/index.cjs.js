"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var React=require("react");const ErrorBoundaryContext=React.createContext(console),ErrorBoundaryProvider=({reporter:r,children:e})=>React.createElement(ErrorBoundaryContext.Provider,{value:r},e),useReporter=()=>React.useContext(ErrorBoundaryContext),useHandledCallback=(r,e)=>{const o=useReporter();return React.useCallback((...e)=>{try{return r(...e)}catch(r){o.error(r)}},e)},refreshPage=()=>{window.location.reload()},FallbackComponent=({className:r,tryRecovering:e})=>React.createElement("div",{className:r},React.createElement("h2",null,"Gah. The component just crashed"),React.createElement("p",null,"You can try reloading component or refresh the page."),React.createElement("button",{onClick:e,type:"button"},"Reload component"),React.createElement("button",{onClick:refreshPage,type:"button"},"Refresh page"));class ErrorBoundary extends React.PureComponent{constructor(){super(...arguments),this.state={error:null,componentStack:null},this.throwError=(r=>{this.setError(r),this.handleError(r,null)}),this.recover=(()=>{null!==this.state.error?this.setError(null):"production"!==process.env.NODE_ENV&&console.warn("Component has not crashed. Recovering is a no-op in such case")})}componentDidUpdate(r){if(null!==this.state.error&&void 0!==this.props.recoverableProps&&Array.isArray(this.props.recoverableProps))for(const e of this.props.recoverableProps)if(r[e]!==this.props[e]){this.setError(null);break}}componentDidCatch(r,e){this.setError(r,e.componentStack),this.handleError(r,e)}handleError(r,e){if(!1!==this.props.reportErrors)try{null!==e?this.context.error(r.message,{errorInfo:e}):this.context.error(r)}catch(r){console.error("Error could not be reported",r)}if(void 0!==this.props.onError)try{this.props.onError(r,e&&e.componentStack)}catch(r){}}setError(r,e=null){this.setState({error:r,componentStack:e})}render(){const{props:{FallbackComponent:r=FallbackComponent,children:e},state:{error:o,componentStack:t}}=this;return null!==o?React.createElement(r,{error:o,componentStack:t,tryRecovering:this.recover}):e}}ErrorBoundary.contextType=ErrorBoundaryContext;const withErrorBoundary=(r,e)=>{const o=o=>{const t=React.createRef();return React.createElement(ErrorBoundary,Object.assign(Object.assign(Object.assign({},e),o),{ref:t}),React.createElement(r,Object.assign(Object.assign({},o),{boundaryRef:t})))},t=r.displayName||r.name;return o.displayName=t?`WithErrorBoundary(${t})`:"WithErrorBoundary",o};exports.ErrorBoundary=ErrorBoundary,exports.ErrorBoundaryContext=ErrorBoundaryContext,exports.ErrorBoundaryProvider=ErrorBoundaryProvider,exports.FallbackComponent=FallbackComponent,exports.useHandledCallback=useHandledCallback,exports.useReporter=useReporter,exports.withErrorBoundary=withErrorBoundary;
