"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const guards_1 = require("./guards");
const securities_1 = require("./transformers/securities");
exports.transformOas2Service = ({ document }) => {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const httpService = {
        id: '?http-service-id?',
        version: (_b = (_a = document.info) === null || _a === void 0 ? void 0 : _a.version) !== null && _b !== void 0 ? _b : '',
        name: (_d = (_c = document.info) === null || _c === void 0 ? void 0 : _c.title) !== null && _d !== void 0 ? _d : 'no-title',
    };
    if ((_e = document.info) === null || _e === void 0 ? void 0 : _e.description) {
        httpService.description = document.info.description;
    }
    if ((_f = document.info) === null || _f === void 0 ? void 0 : _f.contact) {
        httpService.contact = document.info.contact;
    }
    if ((_g = document.info) === null || _g === void 0 ? void 0 : _g.license) {
        httpService.license = Object.assign(Object.assign({}, document.info.license), { name: document.info.license.name || '' });
    }
    if ((_h = document.info) === null || _h === void 0 ? void 0 : _h.termsOfService) {
        httpService.termsOfService = document.info.termsOfService;
    }
    const schemes = lodash_1.filter(document.schemes, scheme => scheme && lodash_1.isString(scheme));
    const servers = schemes.map(scheme => {
        var _a, _b;
        return ({
            name: (_b = (_a = document.info) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : '',
            description: undefined,
            url: scheme + '://' + (document.host || '') + (document.basePath || ''),
        });
    });
    if (servers.length) {
        httpService.servers = servers;
    }
    const securitySchemes = lodash_1.compact(lodash_1.keys(document.securityDefinitions).map(key => {
        var _a;
        const definition = (_a = document === null || document === void 0 ? void 0 : document.securityDefinitions) === null || _a === void 0 ? void 0 : _a[key];
        if (!definition)
            return undefined;
        return securities_1.translateToSingleSecurity(definition, key);
    }));
    if (securitySchemes.length) {
        httpService.securitySchemes = securitySchemes;
    }
    const security = lodash_1.compact(lodash_1.flatMap(document.security, sec => {
        if (!sec)
            return null;
        return lodash_1.keys(sec).map(key => {
            return securitySchemes.find(securityScheme => {
                return securityScheme.key === key;
            });
        });
    }));
    if (security.length) {
        httpService.security = security;
    }
    const tags = lodash_1.filter(document.tags, guards_1.isTagObject);
    if (tags.length) {
        httpService.tags = tags;
    }
    return httpService;
};
//# sourceMappingURL=service.js.map