"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const guards_1 = require("./guards");
const securities_1 = require("./transformers/securities");
const servers_1 = require("./transformers/servers");
exports.transformOas3Service = ({ document }) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    const httpService = {
        id: '?http-service-id?',
        version: (_b = (_a = document.info) === null || _a === void 0 ? void 0 : _a.version) !== null && _b !== void 0 ? _b : '',
        name: (_d = (_c = document.info) === null || _c === void 0 ? void 0 : _c.title) !== null && _d !== void 0 ? _d : 'no-title',
    };
    if ((_e = document.info) === null || _e === void 0 ? void 0 : _e.description) {
        httpService.description = document.info.description;
    }
    if ((_f = document.info) === null || _f === void 0 ? void 0 : _f.contact) {
        httpService.contact = document.info.contact;
    }
    if ((_g = document.info) === null || _g === void 0 ? void 0 : _g.license) {
        httpService.license = Object.assign(Object.assign({}, document.info.license), { name: document.info.license.name || '' });
    }
    if ((_h = document.info) === null || _h === void 0 ? void 0 : _h.termsOfService) {
        httpService.termsOfService = document.info.termsOfService;
    }
    const servers = lodash_1.compact(lodash_1.map(document.servers, server => {
        var _a, _b, _c;
        if (!server)
            return null;
        const serv = {
            name: (_b = (_a = document.info) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : '',
            description: server.description,
            url: (_c = server.url) !== null && _c !== void 0 ? _c : '',
        };
        const variables = server.variables && servers_1.translateServerVariables(server.variables);
        if (variables && Object.keys(variables).length)
            serv.variables = variables;
        return serv;
    }));
    if (servers.length) {
        httpService.servers = servers;
    }
    const securitySchemes = lodash_1.compact(lodash_1.keys((_j = document.components) === null || _j === void 0 ? void 0 : _j.securitySchemes).map(key => {
        var _a, _b;
        const definition = (_b = (_a = document === null || document === void 0 ? void 0 : document.components) === null || _a === void 0 ? void 0 : _a.securitySchemes) === null || _b === void 0 ? void 0 : _b[key];
        return guards_1.isSecurityScheme(definition) && securities_1.transformToSingleSecurity(definition, key);
    }));
    if (securitySchemes.length) {
        httpService.securitySchemes = securitySchemes;
    }
    const security = lodash_1.compact(lodash_1.flatMap(document.security, sec => {
        if (!sec)
            return null;
        return lodash_1.keys(sec).map(key => {
            return securitySchemes.find(securityScheme => {
                return securityScheme.key === key;
            });
        });
    }));
    if (security.length) {
        httpService.security = security;
    }
    const tags = lodash_1.filter(document.tags, guards_1.isTagObject);
    if (tags.length) {
        httpService.tags = tags;
    }
    return httpService;
};
//# sourceMappingURL=service.js.map