import { identity, tuple } from 'fp-ts/es6/function';
import { some, none } from 'fp-ts/es6/Option';
import { fold, bimap } from 'fp-ts/es6/These';
import { pipe } from 'fp-ts/es6/pipeable';
export function salign(F, S) {
    return function (fx, fy) { return F.alignWith(fx, fy, fold(identity, identity, S.concat)); };
}
export function padZip(F) {
    return function (fa, fb) { return padZipWith(F)(fa, fb, function (a, b) { return tuple(a, b); }); };
}
export function padZipWith(F) {
    return function (fa, fb, f) {
        return F.alignWith(fa, fb, function (ab) {
            return pipe(ab, bimap(some, some), fold(function (a) { return f(a, none); }, function (b) { return f(none, b); }, function (a, b) { return f(a, b); }));
        });
    };
}
