import { flow } from 'fp-ts/es6/function';
import { fold } from 'fp-ts/es6/Option';
import { pipe } from 'fp-ts/es6/pipeable';
export function collectUntil(M, F) {
    return function (f) {
        var go = function (mfa) {
            return M.chain(mfa, function (_a) {
                var fx = _a[0], oi = _a[1];
                return pipe(oi, fold(function () { return M.of(fx); }, function (i) { return go(M.map(f(i), function (_a) {
                    var fy = _a[0], oi = _a[1];
                    return [F.alt(fx, function () { return fy; }), oi];
                })); }));
            });
        };
        return flow(f, go);
    };
}
