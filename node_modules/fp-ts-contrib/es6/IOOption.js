var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as O from 'fp-ts/es6/Option';
import { getOptionM } from 'fp-ts/es6/OptionT';
import { getFilterableComposition } from 'fp-ts/es6/Filterable';
import { getSemigroup as getIOSemigroup, io, of, map as ioMap } from 'fp-ts/es6/IO';
import { pipeable } from 'fp-ts/es6/pipeable';
var T = getOptionM(io);
/**
 * @since 0.1.14
 */
export var URI = 'IOOption';
/**
 * @since 0.1.14
 */
export var none = T.none();
/**
 * @since 0.1.14
 */
export var some = T.of;
/**
 * @since 0.1.14
 */
export var fromIO = T.fromM;
/**
 * @since 0.1.14
 */
export var fromOption = of;
/**
 * @since 0.1.14
 */
export function fold(onNone, onSome) {
    return function (ma) { return T.fold(ma, onNone, onSome); };
}
/**
 * @since 0.1.14
 */
export function fromNullable(a) {
    return fromOption(O.fromNullable(a));
}
/**
 * @since 0.1.14
 */
export function getOrElse(onNone) {
    return function (ma) { return T.getOrElse(ma, onNone); };
}
/**
 * @since 0.1.14
 */
export function fromIOEither(ma) {
    return io.map(ma, O.fromEither);
}
/**
 * @since 0.1.14
 */
export function toUndefined(ma) {
    return io.map(ma, O.toUndefined);
}
/**
 * @since 0.1.14
 */
export function toNullable(ma) {
    return io.map(ma, O.toNullable);
}
/**
 * @since 0.1.14
 */
export function mapNullable(f) {
    return ioMap(O.mapNullable(f));
}
/**
 * @since 0.1.14
 */
export function getApplySemigroup(S) {
    return getIOSemigroup(O.getApplySemigroup(S));
}
/**
 * @since 0.1.14
 */
export function getApplyMonoid(M) {
    return {
        concat: getApplySemigroup(M).concat,
        empty: some(M.empty)
    };
}
/**
 * @since 0.1.14
 */
export function fromOptionK(f) {
    return function () {
        var a = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            a[_i] = arguments[_i];
        }
        return fromOption(f.apply(void 0, a));
    };
}
/**
 * @since 0.1.14
 */
export function chainOptionK(f) {
    return chain(fromOptionK(f));
}
/**
 * @since 0.1.14
 */
export var ioOption = __assign({ URI: URI, map: T.map, of: some, ap: T.ap, chain: T.chain, alt: T.alt, fromIO: fromIO }, getFilterableComposition(io, O.option));
var _a = pipeable(ioOption), alt = _a.alt, ap = _a.ap, apFirst = _a.apFirst, apSecond = _a.apSecond, chain = _a.chain, chainFirst = _a.chainFirst, flatten = _a.flatten, map = _a.map, partition = _a.partition, partitionMap = _a.partitionMap, filter = _a.filter, filterMap = _a.filterMap, compact = _a.compact, separate = _a.separate;
export { 
/**
 * @since 0.1.14
 */
alt, 
/**
 * @since 0.1.14
 */
ap, 
/**
 * @since 0.1.14
 */
apFirst, 
/**
 * @since 0.1.14
 */
apSecond, 
/**
 * @since 0.1.14
 */
chain, 
/**
 * @since 0.1.14
 */
chainFirst, 
/**
 * @since 0.1.14
 */
flatten, 
/**
 * @since 0.1.14
 */
map, 
/**
 * @since 0.1.14
 */
partition, 
/**
 * @since 0.1.14
 */
partitionMap, 
/**
 * @since 0.1.14
 */
filter, 
/**
 * @since 0.1.14
 */
filterMap, 
/**
 * @since 0.1.14
 */
compact, 
/**
 * @since 0.1.14
 */
separate };
