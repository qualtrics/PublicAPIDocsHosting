/**
 * @since 0.1.0
 */
import * as I from 'fp-ts/es6/IO';
import { pipeable } from 'fp-ts/es6/pipeable';
import { getReaderM } from 'fp-ts/es6/ReaderT';
var T = getReaderM(I.io);
/**
 * @since 0.1.0
 */
export var URI = 'ReaderIO';
/**
 * @since 0.1.0
 */
export function run(ma, r) {
    return ma(r)();
}
/**
 * @since 0.1.0
 */
export var fromReader = T.fromReader;
/**
 * @since 0.1.0
 */
export var fromIO = T.fromM;
/**
 * @since 0.1.0
 */
export var ask = T.ask;
/**
 * @since 0.1.0
 */
export var asks = T.asks;
/**
 * @since 0.1.0
 */
export function local(f) {
    return function (ma) { return T.local(ma, f); };
}
/**
 * @since 0.1.10
 */
export function fromIOK(f) {
    return function () {
        var a = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            a[_i] = arguments[_i];
        }
        return fromIO(f.apply(void 0, a));
    };
}
/**
 * @since 0.1.10
 */
export function chainIOK(f) {
    return chain(fromIOK(f));
}
/**
 * @since 0.1.0
 */
export var readerIO = {
    URI: URI,
    map: T.map,
    of: T.of,
    ap: T.ap,
    chain: T.chain
};
var _a = pipeable(readerIO), ap = _a.ap, apFirst = _a.apFirst, apSecond = _a.apSecond, chain = _a.chain, chainFirst = _a.chainFirst, flatten = _a.flatten, map = _a.map;
export { 
/**
 * @since 0.1.0
 */
ap, 
/**
 * @since 0.1.0
 */
apFirst, 
/**
 * @since 0.1.0
 */
apSecond, 
/**
 * @since 0.1.0
 */
chain, 
/**
 * @since 0.1.0
 */
chainFirst, 
/**
 * @since 0.1.0
 */
flatten, 
/**
 * @since 0.1.0
 */
map };
