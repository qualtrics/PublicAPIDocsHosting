{"version":3,"file":"component---src-pages-api-reference-tsx-296726e63a53f3f207b9.js","mappings":"wOAMAA,EAAQ,OAkCR,UAhCyB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACrBC,EAAW,GACTC,EAAUF,EAASG,SAASC,MAAM,kBAAkB,GACpDC,EAASL,EAASM,KACpBJ,EAAQE,MAAM,KAAKG,OAAS,IAE9BN,GADWO,EAAAA,EAAAA,GAAY,iBAAkBN,EAASG,IAIpD,OACE,2BACe,KAAbJ,EACA,gBAAC,IAAD,KACE,wBAAMQ,UAAU,UACVC,QAAO,SAAWT,KAG5B,gBAAC,IAAD,KACE,gBAAC,KAAD,CACEU,YAAY,uBACZC,UAAU,cACVC,SAAS,gBACTC,yBAAyB,EACzBC,OAA0B,oBAAXC,OAAyB,SAAW","sources":["webpack://@qualtrics/qualtrics-api-documentation/./src/pages/api-reference.tsx"],"sourcesContent":["import { StoplightProject } from \"@stoplight/elements-dev-portal\";\r\nimport React from \"react\";\r\nimport {Helmet} from \"react-helmet\"\r\nimport Layout from \"../components/layout\";\r\nimport {getRedirect} from \"../services/redirectTool\"\r\n\r\nrequire(\"@stoplight/elements-dev-portal/styles.min.css\");\r\n\r\nconst APIReferencePage = ({location}) => {\r\n  let redirect = \"\";\r\n  const nodeUri = location.pathname.split('/api-reference')[1];\r\n  const anchor = location.hash;\r\n  if (nodeUri.split(\"/\").length > 2){\r\n    let path = getRedirect(\"/api-reference\", nodeUri, anchor);\r\n    redirect = path;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    { redirect !== \"\" ? (\r\n      <Helmet>\r\n        <meta httpEquiv=\"refresh\" \r\n              content={`0;url=${redirect}`}/>\r\n      </Helmet>\r\n      ) : (          \r\n    <Layout> \r\n      <StoplightProject\r\n        platformUrl=\"https://stoplight.io\"\r\n        projectId=\"cHJqOjk3NDQ\"\r\n        basePath=\"api-reference\"\r\n        collapseTableOfContents={true}\r\n        router={typeof window === \"undefined\" ? \"memory\" : \"history\"}\r\n      />\r\n      </Layout>\r\n      )\r\n    }     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APIReferencePage;\r\n"],"names":["require","location","redirect","nodeUri","pathname","split","anchor","hash","length","getRedirect","httpEquiv","content","platformUrl","projectId","basePath","collapseTableOfContents","router","window"],"sourceRoot":""}